// <auto-generated />
using System;
using DescLogicFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DescLogicFramework.Migrations
{
    [DbContext(typeof(DescDBContext))]
    [Migration("20200813050716_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DescLogicFramework.DescriptionColumnValuePair", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColumnName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LithologicDescriptionLithologicID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("ID");

                    b.HasIndex("LithologicDescriptionLithologicID");

                    b.ToTable("DescriptionColumnValuePairs");
                });

            modelBuilder.Entity("DescLogicFramework.LithologicDescription", b =>
                {
                    b.Property<string>("LithologicID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DescriptionGroup")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescriptionReport")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescriptionTab")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescriptionType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("LithologicID");

                    b.ToTable("LithologicDescriptions");
                });

            modelBuilder.Entity("DescLogicFramework.LithologicSubinterval", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LithologicDescriptionLithologicID")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LithologicSubID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LithologicDescriptionLithologicID");

                    b.ToTable("LithologicSubintervals");
                });

            modelBuilder.Entity("DescLogicFramework.Measurement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InstrumentReport")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InstrumentSystem")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LithologicID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LithologicSubID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MeasurementDescriptions");
                });

            modelBuilder.Entity("DescLogicFramework.MeasurementColumnValuePair", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColumnName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LithologicID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LithologicSubID")
                        .HasColumnType("int");

                    b.Property<Guid?>("MeasurementID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("ID");

                    b.HasIndex("MeasurementID");

                    b.ToTable("MeasurementColumnValuePairs");
                });

            modelBuilder.Entity("DescLogicFramework.DescriptionColumnValuePair", b =>
                {
                    b.HasOne("DescLogicFramework.LithologicDescription", null)
                        .WithMany("Data")
                        .HasForeignKey("LithologicDescriptionLithologicID");
                });

            modelBuilder.Entity("DescLogicFramework.LithologicDescription", b =>
                {
                    b.OwnsOne("DescLogicFramework.SectionInfo", "SectionInfo", b1 =>
                        {
                            b1.Property<Guid>("ID")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Core")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Expedition")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Hole")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LithologicDescriptionLithologicID")
                                .IsRequired()
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("SampleID")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Section")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("SectionTextID")
                                .HasColumnType("int");

                            b1.Property<string>("Site")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Type")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ID");

                            b1.HasIndex("LithologicDescriptionLithologicID")
                                .IsUnique();

                            b1.ToTable("Sections");

                            b1.WithOwner()
                                .HasForeignKey("LithologicDescriptionLithologicID");
                        });
                });

            modelBuilder.Entity("DescLogicFramework.LithologicSubinterval", b =>
                {
                    b.HasOne("DescLogicFramework.LithologicDescription", "LithologicDescription")
                        .WithMany("LithologicSubintervals")
                        .HasForeignKey("LithologicDescriptionLithologicID");
                });

            modelBuilder.Entity("DescLogicFramework.MeasurementColumnValuePair", b =>
                {
                    b.HasOne("DescLogicFramework.Measurement", null)
                        .WithMany("Data")
                        .HasForeignKey("MeasurementID");
                });
#pragma warning restore 612, 618
        }
    }
}
